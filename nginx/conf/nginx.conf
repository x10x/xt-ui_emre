#get ssl certificate with standalone method before using this config file or put # comment befor ssl related things.
#
user  xtreamcodes;
worker_processes  auto;

worker_rlimit_nofile 300000;
events {
    worker_connections  16000;
    use epoll;
	accept_mutex on;
	multi_accept on;
}
thread_pool pool_xtream threads=32 max_queue=0;
http {

    include       mime.types;
    default_type  application/octet-stream;

    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        on;
	reset_timedout_connection on;
    gzip off;
    fastcgi_read_timeout 200;
	keepalive_timeout 10;
	include balance.conf;
	send_timeout 20m;	
	sendfile_max_chunk 512k;
	lingering_close off;
	aio threads=pool_xtream;
	client_body_timeout 13s;
	client_header_timeout 13s;
	client_max_body_size 3m; # increase this in case of uploading bigger m3u files. also increase php "post_max_size" and "upload_max_filesize" in PHP.ini settings
    server_tokens off;

	log_format main '[$time_local] $remote_addr - $remote_user $status "$request" "$http_referer" "$http_user_agent"';
	log_format fail2ban '[$time_local] $remote_addr $status "$request" "$http_referer" "$http_user_agent"';
	error_log /home/xtreamcodes/iptv_xtream_codes/logs/error.log warn;
 
#https://support.cloudflare.com/hc/en-us/articles/200170786-Restoring-original-visitor-IPs-Logging-visitor-IP-addresses-with-mod-cloudflare-
#
	set_real_ip_from 103.21.244.0/22;
	set_real_ip_from 103.22.200.0/22;
	set_real_ip_from 103.31.4.0/22;
	set_real_ip_from 104.16.0.0/12;
	set_real_ip_from 108.162.192.0/18;
	set_real_ip_from 131.0.72.0/22;
	set_real_ip_from 141.101.64.0/18;
	set_real_ip_from 162.158.0.0/15;
	set_real_ip_from 172.64.0.0/13;
	set_real_ip_from 173.245.48.0/20;
	set_real_ip_from 188.114.96.0/20;
	set_real_ip_from 190.93.240.0/20;
	set_real_ip_from 197.234.240.0/22;
	set_real_ip_from 198.41.128.0/17;
	set_real_ip_from 2400:cb00::/32;
	set_real_ip_from 2606:4700::/32;
	set_real_ip_from 2803:f800::/32;
	set_real_ip_from 2405:b500::/32;
	set_real_ip_from 2405:8100::/32;
	set_real_ip_from 2c0f:f248::/32;
	set_real_ip_from 2a06:98c0::/29;

	real_ip_header CF-Connecting-IP;
	#real_ip_header X-Forwarded-For;

	limit_req_zone $binary_remote_addr zone=one:30m rate=20r/s;
	limit_req_zone $binary_remote_addr zone=two:2m rate=30r/s;


#this part for broadcast port without ssl	
    server {
#		listen 8000;
		listen 8080;
		listen [::]:8080; # for ipv6

        index index.php index.html index.htm;
        root /home/xtreamcodes/iptv_xtream_codes/wwwdir/;
		
		server_name yourdomain.com;

		error_log /home/xtreamcodes/iptv_xtream_codes/logs/main.error.log warn;
		access_log /home/xtreamcodes/iptv_xtream_codes/logs/main.access.log fail2ban;


        chunked_transfer_encoding off;

		if ( $request_method !~ ^(GET|POST)$ ) {
			return 200;
		}

        rewrite_log on;
        rewrite ^/live/(.*)/(.*)/(.*)\.(.*)$ /streaming/clients_live.php?username=$1&password=$2&stream=$3&extension=$4 break;
        rewrite ^/movie/(.*)/(.*)/(.*)$ /streaming/clients_movie.php?username=$1&password=$2&stream=$3&type=movie break;
		rewrite ^/series/(.*)/(.*)/(.*)$ /streaming/clients_movie.php?username=$1&password=$2&stream=$3&type=series break;
        rewrite ^/(.*)/(.*)/(.*).ch$ /streaming/clients_live.php?username=$1&password=$2&stream=$3&extension=ts break;
        rewrite ^/(.*)\.ch$ /streaming/clients_live.php?extension=ts&stream=$1&qs=$query_string break;
        rewrite ^/ch(.*)\.m3u8$ /streaming/clients_live.php?extension=m3u8&stream=$1&qs=$query_string break;
		rewrite ^/hls/(.*)/(.*)/(.*)/(.*)/(.*)$ /streaming/clients_live.php?extension=m3u8&username=$1&password=$2&stream=$3&type=hls&segment=$5&token=$4 break;
		rewrite ^/hlsr/(.*)/(.*)/(.*)/(.*)/(.*)/(.*)$ /streaming/clients_live.php?token=$1&username=$2&password=$3&segment=$6&stream=$4&key_seg=$5 break;
		rewrite ^/timeshift/(.*)/(.*)/(.*)/(.*)/(.*)\.(.*)$ /streaming/timeshift.php?username=$1&password=$2&stream=$5&extension=$6&duration=$3&start=$4 break;
		rewrite ^/timeshifts/(.*)/(.*)/(.*)/(.*)/(.*)\.(.*)$ /streaming/timeshift.php?username=$1&password=$2&stream=$4&extension=$6&duration=$3&start=$5 break;
		
		rewrite ^/(.*)/(.*)/(\d+)$ /streaming/clients_live.php?username=$1&password=$2&stream=$3&extension=ts break;
		#add pvr support
		rewrite ^/server/load.php$ /portal.php break;
		
		location /stalker_portal/c {
			alias /home/xtreamcodes/iptv_xtream_codes/wwwdir/c;
		}
		
		#FFmpeg Report Progress
		location = /progress.php {
		    allow 127.0.0.1;
			deny all;
			fastcgi_pass php;
			include fastcgi_params;
			fastcgi_ignore_client_abort on;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		}


        location ~ \.php$ {
			limit_req zone=one burst=8 nodelay; # nodelay requires up to date nginx
			limit_req_status 429;
			limit_req_log_level warn;
            try_files $uri =404;
			fastcgi_index index.php;
			fastcgi_pass php;
			include fastcgi_params;
			fastcgi_buffering on;
			fastcgi_buffers 96 32k;
			fastcgi_buffer_size 32k;
			fastcgi_max_temp_file_size 0;
			fastcgi_keep_conn on;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        }
    }

#this part for broadcast port with ssl
#NOT- default nginx build of xc is old and doesn't support http2
	
    server {
#		listen 443 ssl http2;
        listen 8443 ssl http2;
		listen [::]:8443 ssl http2; # for ipv6

        ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
		ssl_trusted_certificate /etc/letsencrypt/live/yourdomain.com/chain.pem;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #you should abandon tls v1.1
		ssl_session_timeout 10m;
		ssl_session_cache shared:MozSSL:10m;
		ssl_session_tickets off;

		ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
		ssl_prefer_server_ciphers off;    

		#use wget command to get dhparam from mozilla
		# wget --no-check-certificate "https://ssl-config.mozilla.org/ffdhe4096.txt" -O /home/xtreamcodes/iptv_xtream_codes/nginx/conf/dhparam.pem
		ssl_dhparam dhparam.pem;
		ssl_ecdh_curve auto;

		# OCSP stapling
		ssl_stapling on;
		ssl_stapling_verify on;
		resolver 1.1.1.1 1.0.0.1 valid=300s;
		resolver_timeout 5s;

		error_page  497 https://$host:$server_port$request_uri;

        index index.php index.html index.htm;
        root /home/xtreamcodes/iptv_xtream_codes/wwwdir/;

		server_name yourdomain.com; 

		error_log /home/xtreamcodes/iptv_xtream_codes/logs/main.error.log warn;
		access_log /home/xtreamcodes/iptv_xtream_codes/logs/main.access.log fail2ban;

        chunked_transfer_encoding off;

		if ( $request_method !~ ^(GET|POST)$ ) {
			return 200;
		}

        rewrite_log on;
        rewrite ^/live/(.*)/(.*)/(.*)\.(.*)$ /streaming/clients_live.php?username=$1&password=$2&stream=$3&extension=$4 break;
        rewrite ^/movie/(.*)/(.*)/(.*)$ /streaming/clients_movie.php?username=$1&password=$2&stream=$3&type=movie break;
		rewrite ^/series/(.*)/(.*)/(.*)$ /streaming/clients_movie.php?username=$1&password=$2&stream=$3&type=series break;
        rewrite ^/(.*)/(.*)/(.*).ch$ /streaming/clients_live.php?username=$1&password=$2&stream=$3&extension=ts break;
        rewrite ^/(.*)\.ch$ /streaming/clients_live.php?extension=ts&stream=$1&qs=$query_string break;
        rewrite ^/ch(.*)\.m3u8$ /streaming/clients_live.php?extension=m3u8&stream=$1&qs=$query_string break;
		rewrite ^/hls/(.*)/(.*)/(.*)/(.*)/(.*)$ /streaming/clients_live.php?extension=m3u8&username=$1&password=$2&stream=$3&type=hls&segment=$5&token=$4 break;
		rewrite ^/hlsr/(.*)/(.*)/(.*)/(.*)/(.*)/(.*)$ /streaming/clients_live.php?token=$1&username=$2&password=$3&segment=$6&stream=$4&key_seg=$5 break;
		rewrite ^/timeshift/(.*)/(.*)/(.*)/(.*)/(.*)\.(.*)$ /streaming/timeshift.php?username=$1&password=$2&stream=$5&extension=$6&duration=$3&start=$4 break;
		rewrite ^/timeshifts/(.*)/(.*)/(.*)/(.*)/(.*)\.(.*)$ /streaming/timeshift.php?username=$1&password=$2&stream=$4&extension=$6&duration=$3&start=$5 break;
		
		rewrite ^/(.*)/(.*)/(\d+)$ /streaming/clients_live.php?username=$1&password=$2&stream=$3&extension=ts break;
		#add pvr support
		rewrite ^/server/load.php$ /portal.php break;
		
		location /stalker_portal/c {
			alias /home/xtreamcodes/iptv_xtream_codes/wwwdir/c;
		}
		
		#FFmpeg Report Progress
		location = /progress.php {
		    allow 127.0.0.1;
			deny all;
			fastcgi_pass php;
			include fastcgi_params;
			fastcgi_ignore_client_abort on;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		}


        location ~ \.php$ {
			limit_req zone=one burst=8 nodelay; # nodelay requires up to date nginx
			limit_req_status 429;
			limit_req_log_level warn;
            try_files $uri =404;
			fastcgi_index index.php;
			fastcgi_pass php;
			include fastcgi_params;
			fastcgi_buffering on;
			fastcgi_buffers 96 32k;
			fastcgi_buffer_size 32k;
			fastcgi_max_temp_file_size 0;
			fastcgi_keep_conn on;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        }
    }
	
#this part is admin panel port without ssl as default

#server {
#    listen 2095;
#	listen [::]:2095;
#    server_name yourdomain.com;

#    return 301 https://$host:2096$request_uri; 


	#return 301 https://$host:$server_port$request_uri;    #you can redirect an http port to https with same port
	#return 301 https://$host:your_https_port$request_uri;    #you can redirect any http port to an https port
	#return 301 https://$server_name:your_https_port$request_uri;  #you can redirect to first address in server_name array with your custom port.
#}


#this part is admin panel port with ssl
#NOT- default nginx build of xc is old and doesn't support http2

    server {
  
		listen 2096 ssl http2;
		listen [::]:2096 ssl http2;

        ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
		ssl_trusted_certificate /etc/letsencrypt/live/yourdomain.com/chain.pem;
		
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_session_timeout 10m;
		ssl_session_cache shared:MozSSL:10m;
		ssl_session_tickets off;

		ssl_ciphers HIGH:!aNULL:!MD5;

		#use wget command to get dhparam from mozilla
		# wget --no-check-certificate "https://ssl-config.mozilla.org/ffdhe4096.txt" -O /home/xtreamcodes/iptv_xtream_codes/nginx/conf/dhparam.pem
		ssl_dhparam dhparam.pem;
		ssl_ecdh_curve auto;

		# OCSP stapling
		ssl_stapling on;
		ssl_stapling_verify on;
		resolver 1.1.1.1 1.0.0.1 valid=300s;
		resolver_timeout 5s;

		add_header X-XSS-Protection "1; mode=block";
		add_header X-Content-Type-Options nosniff;
		add_header X-Permitted-Cross-Domain-Policies master-only;
		add_header Referrer-Policy strict-origin;
#		add_header Strict-Transport-Security "max-age=31536000"; # this forces browser to send every http request with https protocol


        index index.php index.html index.htm;
        root /home/xtreamcodes/iptv_xtream_codes/admin/;

		server_name yourdomain.com;

		error_page  497 https://$host:$server_port$request_uri;

		error_log /home/xtreamcodes/iptv_xtream_codes/logs/admin.error.log warn;


        location ~ \.php$ {
			limit_req zone=one burst=8 nodelay; # nodelay requires up to date nginx
			limit_req_status 429;
			limit_req_log_level warn;
            try_files $uri =404;
			fastcgi_index index.php;
			fastcgi_pass php;
			include fastcgi_params;
			fastcgi_buffering on;
			fastcgi_buffers 96 32k;
			fastcgi_buffer_size 32k;
			fastcgi_max_temp_file_size 0;
			fastcgi_keep_conn on;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        }
    }

	# this will drop connection if someone tries this port with an unknown domain name.
	# you can use this for broadcast ports if you don't use any reseller domain. 
	server {
		server_name _;
		#listen 8080 default_server;
		listen 2096 ssl default_server;

		## To also support IPv6, uncomment this block
		# listen [::]:8080 default_server;
		listen [::]:2096 ssl default_server;

		ssl_certificate server.crt;
		ssl_certificate_key server.key;
		return      444; # "Connection closed without response"
	}
#uncomment next row if you want to use new r22d isp api, it uses port 80.
#include nginx_isp_api.conf;
}
